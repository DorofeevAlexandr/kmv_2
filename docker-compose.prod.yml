
services:
  db:
    env_file:
      - ./.env.prod
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - bridge_network  
    build: ./database/
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 наружу
    expose:
      - 8000
    env_file:
      - ./.env.prod
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    networks:
      - bridge_network
    depends_on:
          - db
    restart: always

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    networks:
      - bridge_network
    depends_on:
      - web
    restart: always

  app :
    networks:
      - bridge_network
    build: ./app/
    restart: always
    env_file:
      - ./.env.prod
    volumes:
      - data_base_csv:/var/data_base_csv

  ftp:
    image: fauria/vsftpd:latest
    container_name: ftp
    restart: always
    env_file:
      - ./.env.prod
    environment:
      - FTP_USER=USER1
      - FTP_PASS=saransk
      - PASV_ADDRESS=192.168.211.247
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
    volumes:
      - data_base_csv:/home/vsftpd
    ports:
      - 20:20
      - 21:21
      - 21100-21110:21100-21110

networks:
  bridge_network:
    driver: bridge

volumes:
    ftp-data:
    ftp-log-data:
    static_volume:
    media_volume:
    postgres_data: {}
    data_base_csv:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./data_base_csv
